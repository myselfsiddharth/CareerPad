name: Deploy to Firebase

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  NODE_VERSION: '18'
  FIREBASE_PROJECT_ID: 'careerpad-09'

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Build application
      run: npm run build
      
    - name: Test build output
      run: |
        if [ ! -d "dist" ]; then
          echo "❌ Build failed: dist directory not found"
          exit 1
        fi
        echo "✅ Build successful! Size: $(du -sh dist | cut -f1)"
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: dist/
        retention-days: 1

  deploy:
    name: Deploy to Firebase
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Firebase CLI
      run: npm install -g firebase-tools
      
    - name: Debug Secrets
      run: |
        echo "Checking secrets availability..."
        if [ -n "${{ secrets.FIREBASE_TOKEN }}" ]; then
          echo "✅ FIREBASE_TOKEN is set (length: ${#FIREBASE_TOKEN})"
          echo "First 10 chars: ${FIREBASE_TOKEN:0:10}..."
        else
          echo "❌ FIREBASE_TOKEN is empty or not set"
        fi
        
        if [ -n "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" ]; then
          echo "✅ FIREBASE_SERVICE_ACCOUNT is set"
        else
          echo "❌ FIREBASE_SERVICE_ACCOUNT is empty or not set"
        fi
        
    - name: Build application
      run: npm run build
      
    - name: Deploy to Firebase Hosting
      run: |
        echo "Setting up Firebase authentication..."
        echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" > service-account.json
        
        echo "Verifying service account file..."
        ls -la service-account.json
        echo "File size: $(wc -c < service-account.json) bytes"
        
        echo "Setting up Firebase project..."
        firebase use ${{ env.FIREBASE_PROJECT_ID }} --token "${{ secrets.FIREBASE_TOKEN }}"
        echo "Current project: $(firebase use)"
        
        echo "Checking Firebase project configuration..."
        firebase projects:list --token "${{ secrets.FIREBASE_TOKEN }}"
        echo "Checking current Firebase configuration..."
        firebase --version
        
        echo "Deploying to Firebase Hosting..."
        echo "Current directory: $(pwd)"
        echo "Contents: $(ls -la)"
        echo "Dist folder: $(ls -la dist/)"
        
        # Force Firebase to use Hosting configuration ONLY
        echo "Deploying ONLY to Firebase Hosting..."
        echo "Ensuring no Cloud Run deployment..."
        
        # Use service account authentication instead of deprecated token
        export GOOGLE_APPLICATION_CREDENTIALS=service-account.json
        
        firebase deploy --only hosting --non-interactive
        
    - name: Deploy Firebase Functions
      run: |
        echo "Setting up Firebase authentication for Functions..."
        echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" > service-account.json
        
        echo "Verifying service account file..."
        ls -la service-account.json
        echo "File size: $(wc -c < service-account.json) bytes"
        
        cd functions
        npm ci
        
        echo "Deploying Firebase Functions..."
        export GOOGLE_APPLICATION_CREDENTIALS=../service-account.json
        firebase deploy --only functions --non-interactive
        
    - name: Deployment Summary
      run: |
        echo "🚀 Deployment completed successfully!"
        echo "📱 Frontend: https://${{ env.FIREBASE_PROJECT_ID }}.web.app"
        echo "🔧 Functions: Deployed to ${{ env.FIREBASE_PROJECT_ID }}"
        echo "⏰ Deployed at: $(date)"
        
    - name: Notify on Success
      if: success()
      run: |
        echo "✅ CareerPad successfully deployed to production!"
        echo "🌐 Visit: https://${{ env.FIREBASE_PROJECT_ID }}.web.app"
        
    - name: Notify on Failure
      if: failure()
      run: |
        echo "❌ Deployment failed! Check the logs above for details."
        echo "🔍 Common issues:"
        echo "   - Firebase secrets not configured"
        echo "   - Build errors in the test job"
        echo "   - Firebase project access issues" 